name: Deploy With Actions
on:
  workflow_dispatch

concurrency:
  group: "main-deploy-branch-workflow" # 唯一标识符，确保只运行一个实例
  cancel-in-progress: false     # 不取消正在运行的实例，后续触发需要等待当前实例完成

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      # - name: Check if branch is main
      #   run: |
      #     if [ "$GITHUB_REF" != "refs/heads/main" ]; then
      #       echo "Not on main branch, exiting workflow."
      #       exit 1
      #     fi
      #     echo "On main branch, continuing workflow."
      - name: Config Git User
        run: |
          git config --local user.name "dragooncjw"
          git config --local user.email "289056872@qq.com"
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'
      - name: Rush Install
        run: node common/scripts/install-run-rush.js install
      - name: Rush build
        run: node common/scripts/install-run-rush.js build
      - name: Generate docs
        run: |
          cd apps/docs
          npm run docs
      - name: Copy auto-docs to en
        run: cp -r apps/docs/src/zh/auto-docs apps/docs/src/en/auto-docs
      - name: Build Doc site
        run: |
          cd apps/docs
          npm run build
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: docs
      #     name: github-pages
      # 添加 nodejs 部署
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Print File Counts
        run: find ./apps/docs/doc_build -type f | wc -l
      - name: Replace docs
        run: |
          rm -rf docs
          mv apps/docs/doc_build docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs
          name: github-pages

  deploy-pages:
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: deploy-pages
    steps:
      - uses: actions/checkout@v4

      - name: Create Vercel Proxy Config
        run: |
          mkdir -p ./docs
          echo '{
            "rewrites": [
              {
                "source": "/(.*)",
                "destination": "https://dragooncjw.github.io/flowgram.ai/"
              }
            ],
            "headers": [
              {
                "source": "/(.*)",
                "headers": [
                  { "key": "Cache-Control", "value": "public, max-age=31536000, immutable" }
                ]
              }
            ]
          }' > ./docs/vercel.json

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./docs
          prod: true
